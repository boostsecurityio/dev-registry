api_version: 1.0


id: boostsecurityio/snyk-test
name: BoostSecurity Snyk SCA
namespace: boostsecurityio/snyk-test
scan_types:
  - sca


config:
  support_diff_scan: true


setup:
  - name: download snyk-cli
    environment:
      VERSION: v1.1179.0
    run: |
        if test -f /etc/os-release
        then grep -q alpine /etc/os-release && os=alpine || os=linux
        else os=$(uname -s | tr '[:upper:]' '[:lower:]')
        fi

        case "$(uname -m)-${os}" in
          x86_64-linux)
            arch="snyk-linux"
            sha="fe1341647fbc55b0df8592ed077d099ec7f951a64763290584fcd0496e9c4fab  snyk-linux"
            ;;
          x86_64-alpine)
            arch="snyk-alpine"
            sha="a9ecb2ceaa6791451c64a08763a8232f2ee608f10a668820a66c49a028f5bc08  snyk-alpine"
            ;;
          aarch64-linux)
            arch="snyk-linux-arm64"
            sha="f3d5d8144af48a509bd653ddd4ca03baeb881c894425878781e44901c91c40e3  snyk-linux-arm64"
            ;;
          x86_64-darwin)
            arch="snyk-macos"
            sha="e420e76dff3db2915fc1f218c17f311d484f3d468db9a07c1d6a6413717ed74e  snyk-macos"
            ;;
          *)
            echo "Unsupported machine: ${machine}"
            exit 1
            ;;
        esac

        curl -fsSL -O "https://static.snyk.io/cli/${VERSION}/${arch}"
        echo ${sha} | sha256sum --check

        mv ${arch} snyk
        chmod +x snyk
        ./snyk auth $SNYK_TOKEN


steps:
  - scan:
      command:
          run: |
            $SETUP_PATH/snyk test --json --all-projects || ecode=$?
            [ ${ecode:-0} -lt 2 ] || exit $ecode
      format: sarif
      post-processor:
        docker:
            image: public.ecr.aws/boostsecurityio/boost-scanner-snyk:828166b@sha256:cfb00b13c86e93b802331c99c229cfb1e0642c0ca0b00eb4ee5799ed2e70adf6
            command: process
            environment:
                PYTHONIOENCODING: utf-8
