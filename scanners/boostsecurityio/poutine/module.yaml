api_version: 1.0

id: boostsecurityio/poutine
name: BoostSecurity Poutine
namespace: boostsecurityio/Poutine
scan_types:
  - sast

config:
  support_diff_scan: true
  require_full_repo: true

setup:
- name: download poutine
  environment:
    VERSION: 1.0.1
    LINUX_X86_64_SHA: b140051649515a75a83ec81b7f6569b6f109d732c2d45499058f52a7e23a2923
    LINUX_ARM64_SHA: 285a5141e99f9d03cf011c2bb210eb1dc7bfdf19e0687fdf1fc0cb73e9844f3d
    MACOS_X86_64_SHA: 0ec25f5bca92d603bf38196fca90646016a226aefda03e8a9fa401d4167fa1f8
    MACOS_ARM64_SHA: c8d283ebcaaf846a677c5b2f159294b08d74cfe7750936135a8a56586adbb06a
  run: |
    BINARY_URL="https://github.com/boostsecurityio/poutine/releases/download/v${VERSION}"
    ARCH=$(uname -m)
    
    case "$(uname -sm)" in
      "Linux x86_64")
        BINARY_URL="${BINARY_URL}/poutine_Linux_x86_64.tar.gz"
        SHA="${LINUX_X86_64_SHA} poutine.tgz"
        ;;
      "Linux aarch64")
        BINARY_URL="${BINARY_URL}/poutine_Linux_arm64.tar.gz"
        SHA="${LINUX_ARM64_SHA} poutine.tgz"
        ;;
      "Darwin x86_64")
        BINARY_URL="${BINARY_URL}/poutine_Darwin_x86_64.tar.gz"
        SHA="${MACOS_X86_64_SHA} poutine.tgz"
        ;;
      "Darwin arm64")
        BINARY_URL="${BINARY_URL}/poutine_Darwin_arm64.tar.gz"
        SHA="${MACOS_ARM64_SHA} poutine.tgz"
        ;;
      *)
        echo "Unsupported machine: ${OPTARG}"
        exit 1
        ;;
    esac
    
    curl -o poutine.tgz -fsSL "${BINARY_URL}"
    echo "${SHA}" | sha256sum --check
    
    tar --no-same-owner -zxf poutine.tgz poutine
    rm poutine.tgz
    chmod +x poutine

steps:
  - scan:
      command:
        run: |
          $SETUP_PATH/poutine analyze_local . --format sarif
      format: sarif
