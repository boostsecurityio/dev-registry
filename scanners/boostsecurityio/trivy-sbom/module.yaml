api_version: 1.0

id: boostsecurityio/trivy-sbom
name: Trivy (FS SBOM)
namespace: boostsecurityio/trivy-sbom
scan_types:
  - sbom

config:
  support_diff_scan: false

setup:
  - name: Verify dotnet installed
    run: |
      mkdir -p $SETUP_PATH/scan-tools
      if ! dotnet --version ; then
        echo "dotnet is not installed, the scanner cannot run."
        exit 1
      fi
      dotnet tool install CycloneDX --version 5.5.0 --tool-path $SETUP_PATH/scan-tools/.dotnet-tools
      if [ $? -ne 0 ]; then
        echo "Failed to install CycloneDX"
        exit 1
      fi
      if ! "$SETUP_PATH/scan-tools/.dotnet-tools/dotnet-CycloneDX" --version >/dev/null 2>&1; then
        echo "CycloneDX did not install or run correctly"
        exit 1
      fi

steps:
  - scan:
      command:
        run: |
          TEMP_SOLN_FILE="temp"
          SCAN_TARGET=$TEMP_SOLN_FILE".sln"
          
          # Find all .csproj files (excluding test directories)
          ALL_PROJECTS=$(find . -maxdepth 5 -name "*.csproj" -type f)
          
          if [ -z "$ALL_PROJECTS" ]; then
              echo "{}"
              exit 0
          fi
          
          # Test each project - only include ones that restore successfully
          # This filters out template projects or any broken projects
          VALID_PROJECTS_FILE=$(mktemp)
          
          while IFS= read -r proj; do
              if [ -n "$proj" ] && dotnet restore "$proj" --ignore-failed-sources --no-cache >/dev/null 2>&1; then
                  echo "$proj" >> "$VALID_PROJECTS_FILE"
              fi
          done <<EOF
          $ALL_PROJECTS
          EOF
          
          PROJECT_LIST=$(cat "$VALID_PROJECTS_FILE")
          rm -f "$VALID_PROJECTS_FILE"

          
          if [ -z "$PROJECT_LIST" ]; then
              echo "No projects found."
              exit 1
          fi
          
          # Create temporary solution to merge all projects
          dotnet new sln -n $TEMP_SOLN_FILE --force >/dev/null 2>&1 || true
          
          # Add all found .csproj files to the solution
          echo "$PROJECT_LIST" | while IFS= read -r proj; do
              [ -n "$proj" ] && dotnet sln $SCAN_TARGET add "$proj" >/dev/null 2>&1 || true
          done
                    
          # Restore packages while ignoring errors.
          if [ -n "$SCAN_TARGET" ]; then
              dotnet restore "$SCAN_TARGET" --ignore-failed-sources --no-cache >/dev/null 2>&1 || true
          fi
          
          # Generate SBOM to temporary directory
          OUTPUT_DIR="temp_sbom_output"
          rm -rf "$OUTPUT_DIR"  || true
          
          if [ -n "$SCAN_TARGET" ] && $SETUP_PATH/scan-tools/.dotnet-tools/dotnet-CycloneDX "$SCAN_TARGET" \
              --disable-package-restore \
              --output "$OUTPUT_DIR" \
              --output-format json \
             >/dev/null 2>&1; then
          
              if [ -f "$OUTPUT_DIR/bom.json" ]; then
                  cat "$OUTPUT_DIR/bom.json"
              else
                  echo "SBOM result missing."
                  exit 1
              fi
          else
              echo "CycloneDX failed to generate SBOM."
              exit 1
          fi

      format: cyclonedx

