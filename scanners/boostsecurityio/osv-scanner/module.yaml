api_version: 1.0


id: boostsecurityio/osv-scanner
name: BoostSecurity osv-scanner
namespace: boostsecurityio/osv-scanner
scan_types:
  - sca


config:
  support_diff_scan: true
  include_files:
    - buildscript-gradle.lockfile
    - Cargo.lock
    - composer.lock
    - conan.lock
    - Gemfile.lock
    - go.mod
    - gradle.lockfile
    - mix.lock
    - package-lock.json
    - packages.lock.json
    - pdm.lock
    - Pipfile.lock
    - pnpm-lock.yaml
    - poetry.lock
    - pom.xml
    - pubspec.lock
    - requirements.txt
    - renv.lock
    - yarn.lock

setup:
  - name: Install OSV-Scanner
    environment:
      VERSION: 1.7.2
      MACOS_X86_64_SHA: 4f45e9599bf467ddaf9ff59a444c9cde6d1094d0b51e6ce265c718e0d8c71f2a
      MACOS_ARM64_SHA: dd65874c69a21e6f8feeb1c0c9b84f0c0afb9740dc7a181fe239448c549f1eda
      LINUX_X86_64_SHA: 8e89b8bca569c8abe3614b3ce403c6c0e8a9a555b295d9fa21628af6921e65d0
      LINUX_ARM64_SHA: 929eade915a805c350745a76b275ed400b4e8d4c769a17be3f0084cf05197996
    run: |
      BINARY_URL="https://github.com/google/osv-scanner/releases/download/v${VERSION}"
      ARCH=$(uname -m)
      case "$(uname -sm)" in
        "Darwin x86_64")
          BINARY_URL="${BINARY_URL}/osv-scanner_darwin_amd64"
          SHA="${MACOS_X86_64_SHA} osv-scanner"
          ;;
        "Darwin arm64")
          BINARY_URL="${BINARY_URL}/osv-scanner_darwin_arm64"
          SHA="${MACOS_ARM64_SHA} osv-scanner"
          ;;
        "Linux x86_64")
          BINARY_URL="${BINARY_URL}/osv-scanner_linux_amd64"
          SHA="${LINUX_X86_64_SHA} osv-scanner"
          ;;
        "Linux aarch64")
          BINARY_URL="${BINARY_URL}/osv-scanner_linux_arm64"
          SHA="${LINUX_ARM64_SHA} osv-scanner"
          ;;
        *)
          echo "Unsupported machine: ${OPTARG}"
          exit 1
          ;;
      esac
      curl -o osv-scanner -fsSL "${BINARY_URL}"
      echo "${SHA}" | sha256sum --check
      
      chmod +x osv-scanner

steps:
- scan:
    command:
      run: |
        if ! $SETUP_PATH/osv-scanner scan --recursive --call-analysis=all --format json .; then
          if test $? -gt 2; then
            echo "osv-scanner failed to execute"
            exit 1
          fi
        fi
      environment:
        HOME: /tmp
    format: sarif
    post-processor:
      docker:
          image: public.ecr.aws/boostsecurityio/boost-converter-sca:3fd32ff@sha256:f21a1539e5ed32f2cb97ee7048ec9ca825b491bfbfd86d1ac6f324cc04b5e9f4
          command: process --scanner osv
          environment:
              PYTHONIOENCODING: utf-8
